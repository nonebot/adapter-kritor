# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: common/contact.proto, common/message_data.proto, common/message_element.proto, common/request.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import List, Optional

import betterproto


class Scene(betterproto.Enum):
    GROUP = 0
    FRIEND = 1
    GUILD = 2
    STRANGER_FROM_GROUP = 10
    NEARBY = 5
    """以下类型为可选实现"""

    STRANGER = 9


class Role(betterproto.Enum):
    UNKNOWN = 0
    MEMBER = 1
    ADMIN = 2
    OWNER = 3


class ElementElementType(betterproto.Enum):
    TEXT = 0
    AT = 1
    FACE = 2
    BUBBLE_FACE = 3
    REPLY = 4
    IMAGE = 5
    VOICE = 6
    VIDEO = 7
    BASKETBALL = 8
    DICE = 9
    RPS = 10
    POKE = 11
    MUSIC = 12
    WEATHER = 13
    LOCATION = 14
    SHARE = 15
    GIFT = 16
    MARKET_FACE = 17
    FORWARD = 18
    CONTACT = 19
    JSON = 20
    XML = 21
    FILE = 22
    MARKDOWN = 23
    KEYBOARD = 24


class ImageElementImageType(betterproto.Enum):
    COMMON = 0
    ORIGIN = 1
    FLASH = 2


class MusicElementMusicPlatform(betterproto.Enum):
    QQ = 0
    NETEASE = 1
    CUSTOM = 10


class ResponseResponseCode(betterproto.Enum):
    SUCCESS = 0
    INVALID_ARGUMENT = 1
    INTERNAL = 2
    UNAUTHENTICATED = 3
    PERMISSION_DENIED = 4


@dataclass(eq=False, repr=False)
class Contact(betterproto.Message):
    scene: "Scene" = betterproto.enum_field(1)
    peer: str = betterproto.string_field(2)
    sub_peer: Optional[str] = betterproto.string_field(3, optional=True, group="_sub_peer")


@dataclass(eq=False, repr=False)
class Sender(betterproto.Message):
    uid: str = betterproto.string_field(1)
    uin: Optional[int] = betterproto.uint64_field(2, optional=True, group="_uin")
    nick: Optional[str] = betterproto.string_field(3, optional=True, group="_nick")
    role: Optional["Role"] = betterproto.enum_field(4, optional=True, group="_role")


@dataclass(eq=False, repr=False)
class Element(betterproto.Message):
    type: "ElementElementType" = betterproto.enum_field(1)
    """be friendly to some languages that don't support oneof"""

    text: "TextElement" = betterproto.message_field(2, group="data")
    at: "AtElement" = betterproto.message_field(3, group="data")
    face: "FaceElement" = betterproto.message_field(4, group="data")
    bubble_face: "BubbleFaceElement" = betterproto.message_field(5, group="data")
    reply: "ReplyElement" = betterproto.message_field(6, group="data")
    image: "ImageElement" = betterproto.message_field(7, group="data")
    voice: "VoiceElement" = betterproto.message_field(8, group="data")
    video: "VideoElement" = betterproto.message_field(9, group="data")
    basketball: "BasketballElement" = betterproto.message_field(10, group="data")
    dice: "DiceElement" = betterproto.message_field(11, group="data")
    rps: "RpsElement" = betterproto.message_field(12, group="data")
    poke: "PokeElement" = betterproto.message_field(13, group="data")
    music: "MusicElement" = betterproto.message_field(14, group="data")
    weather: "WeatherElement" = betterproto.message_field(15, group="data")
    location: "LocationElement" = betterproto.message_field(16, group="data")
    share: "ShareElement" = betterproto.message_field(17, group="data")
    gift: "GiftElement" = betterproto.message_field(18, group="data")
    market_face: "MarketFaceElement" = betterproto.message_field(19, group="data")
    forward: "ForwardElement" = betterproto.message_field(20, group="data")
    contact: "ContactElement" = betterproto.message_field(21, group="data")
    json: "JsonElement" = betterproto.message_field(22, group="data")
    xml: "XmlElement" = betterproto.message_field(23, group="data")
    file: "FileElement" = betterproto.message_field(24, group="data")
    markdown: "MarkdownElement" = betterproto.message_field(25, group="data")
    keyboard: "KeyboardElement" = betterproto.message_field(26, group="data")


@dataclass(eq=False, repr=False)
class TextElement(betterproto.Message):
    text: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AtElement(betterproto.Message):
    uid: str = betterproto.string_field(1)
    uin: Optional[int] = betterproto.uint64_field(2, optional=True, group="_uin")


@dataclass(eq=False, repr=False)
class FaceElement(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_big: Optional[bool] = betterproto.bool_field(2, optional=True, group="_is_big")
    result: Optional[int] = betterproto.uint32_field(3, optional=True, group="_result")


@dataclass(eq=False, repr=False)
class BubbleFaceElement(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ReplyElement(betterproto.Message):
    message_id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ImageElement(betterproto.Message):
    file: bytes = betterproto.bytes_field(1, group="data")
    file_name: str = betterproto.string_field(2, group="data")
    file_path: str = betterproto.string_field(3, group="data")
    file_url: str = betterproto.string_field(4, group="data")
    file_md5: Optional[str] = betterproto.string_field(5, optional=True, group="_file_md5")
    sub_type: Optional[int] = betterproto.uint32_field(6, optional=True, group="_sub_type")
    type: Optional["ImageElementImageType"] = betterproto.enum_field(10, optional=True, group="_type")


@dataclass(eq=False, repr=False)
class VoiceElement(betterproto.Message):
    file: bytes = betterproto.bytes_field(1, group="data")
    file_name: str = betterproto.string_field(2, group="data")
    file_path: str = betterproto.string_field(3, group="data")
    file_url: str = betterproto.string_field(4, group="data")
    file_md5: Optional[str] = betterproto.string_field(5, optional=True, group="_file_md5")
    magic: Optional[bool] = betterproto.bool_field(6, optional=True, group="_magic")


@dataclass(eq=False, repr=False)
class VideoElement(betterproto.Message):
    file: bytes = betterproto.bytes_field(1, group="data")
    file_name: str = betterproto.string_field(2, group="data")
    file_path: str = betterproto.string_field(3, group="data")
    file_url: str = betterproto.string_field(4, group="data")
    file_md5: Optional[str] = betterproto.string_field(5, optional=True, group="_file_md5")


@dataclass(eq=False, repr=False)
class BasketballElement(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DiceElement(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RpsElement(betterproto.Message):
    id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PokeElement(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    type: int = betterproto.uint32_field(2)
    strength: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CustomMusicData(betterproto.Message):
    url: str = betterproto.string_field(1)
    audio: str = betterproto.string_field(2)
    title: str = betterproto.string_field(3)
    author: str = betterproto.string_field(4)
    pic: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class MusicElement(betterproto.Message):
    platform: "MusicElementMusicPlatform" = betterproto.enum_field(1)
    id: str = betterproto.string_field(2, group="data")
    custom: "CustomMusicData" = betterproto.message_field(3, group="data")


@dataclass(eq=False, repr=False)
class WeatherElement(betterproto.Message):
    city: str = betterproto.string_field(1)
    code: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class LocationElement(betterproto.Message):
    lat: float = betterproto.float_field(1)
    lon: float = betterproto.float_field(2)
    title: str = betterproto.string_field(3)
    address: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class ShareElement(betterproto.Message):
    url: str = betterproto.string_field(1)
    title: str = betterproto.string_field(2)
    content: str = betterproto.string_field(3)
    image: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GiftElement(betterproto.Message):
    qq: int = betterproto.uint64_field(1)
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MarketFaceElement(betterproto.Message):
    id: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ForwardElement(betterproto.Message):
    res_id: str = betterproto.string_field(1)
    uniseq: str = betterproto.string_field(2)
    summary: str = betterproto.string_field(3)
    description: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class ContactElement(betterproto.Message):
    scene: "Scene" = betterproto.enum_field(1)
    peer: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class JsonElement(betterproto.Message):
    json: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class XmlElement(betterproto.Message):
    xml: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class FileElement(betterproto.Message):
    name: Optional[str] = betterproto.string_field(1, optional=True, group="_name")
    size: Optional[int] = betterproto.uint64_field(2, optional=True, group="_size")
    expire_time: Optional[int] = betterproto.uint64_field(3, optional=True, group="_expire_time")
    id: Optional[str] = betterproto.string_field(4, optional=True, group="_id")
    url: Optional[str] = betterproto.string_field(5, optional=True, group="_url")
    biz: Optional[int] = betterproto.int32_field(6, optional=True, group="_biz")
    sub_id: Optional[str] = betterproto.string_field(7, optional=True, group="_sub_id")


@dataclass(eq=False, repr=False)
class MarkdownElement(betterproto.Message):
    markdown: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ButtonActionPermission(betterproto.Message):
    type: int = betterproto.int32_field(1)
    role_ids: List[str] = betterproto.string_field(2)
    user_ids: List[str] = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ButtonAction(betterproto.Message):
    type: int = betterproto.int32_field(1)
    permission: "ButtonActionPermission" = betterproto.message_field(2)
    unsupported_tips: str = betterproto.string_field(3)
    data: str = betterproto.string_field(4)
    reply: bool = betterproto.bool_field(5)
    enter: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ButtonRender(betterproto.Message):
    label: str = betterproto.string_field(1)
    visited_label: str = betterproto.string_field(2)
    style: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class Button(betterproto.Message):
    id: str = betterproto.string_field(1)
    render_data: "ButtonRender" = betterproto.message_field(2)
    action: "ButtonAction" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class KeyboardRow(betterproto.Message):
    buttons: List["Button"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class KeyboardElement(betterproto.Message):
    rows: List["KeyboardRow"] = betterproto.message_field(1)
    bot_appid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class PushMessageBody(betterproto.Message):
    time: int = betterproto.uint64_field(1)
    message_id: str = betterproto.string_field(2)
    message_seq: int = betterproto.uint64_field(3)
    contact: "Contact" = betterproto.message_field(4)
    sender: "Sender" = betterproto.message_field(5)
    elements: List["Element"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ForwardMessageBody(betterproto.Message):
    message_id: str = betterproto.string_field(1, group="forward_message")
    message: "PushMessageBody" = betterproto.message_field(2, group="forward_message")


@dataclass(eq=False, repr=False)
class EssenceMessageBody(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    sender_uid: str = betterproto.string_field(2)
    sender_uin: int = betterproto.uint64_field(3)
    sender_nick: str = betterproto.string_field(4)
    operator_uid: int = betterproto.uint64_field(5)
    operator_uin: int = betterproto.uint64_field(6)
    operator_nick: str = betterproto.string_field(7)
    operation_time: int = betterproto.uint64_field(8)
    message_time: int = betterproto.uint64_field(9)
    message_id: str = betterproto.string_field(10)
    message_seq: int = betterproto.uint64_field(11)
    json_elements: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class Request(betterproto.Message):
    cmd: str = betterproto.string_field(1)
    seq: int = betterproto.uint32_field(2)
    buf: bytes = betterproto.bytes_field(3)
    no_response: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class Response(betterproto.Message):
    cmd: str = betterproto.string_field(1)
    seq: int = betterproto.uint32_field(2)
    code: "ResponseResponseCode" = betterproto.enum_field(3)
    msg: Optional[str] = betterproto.string_field(4, optional=True, group="_msg")
    buf: bytes = betterproto.bytes_field(5)
